name: Pipeline Template

on:
  push:
    branches: [ main, master ]
  workflow_call:
    inputs:
      java-version:
        required: true
        type: string
      #message:
      #  required: false
      #  type: string

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      maven_version: ${{ steps.maven_version.outputs.VERSION }}
      maven_artifactId: ${{ steps.maven_artifactId.outputs.APP_NAME }}
    steps:
      - uses: actions/checkout@v4
      - name: setup-jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
          cache: maven
      - name: build-maven
        run: mvn -DskipTests clean package
      - name: app-version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        id: maven_version
        env:
          VERSION: ${{ steps.maven_version.outputs.VERSION }}
      - name: app-name
        run: |
          APP_NAME=$( mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout )
          echo "APP_NAME=$APP_NAME" >> $GITHUB_OUTPUT
        id: maven_artifactId
        env:
          APP_NAME: ${{ steps.maven_artifactId.outputs.APP_NAME }}
      #- name: upload-artifact
      #  uses: actions/upload-artifact@v4.6.2
      #  with:
      #    name: app
      #    path: target/*.jar
  quality:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4
      - name: cache-sonarqube-packages
        uses: actions/cache@v4.3.0
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: cache-maven-packages
        uses: actions/cache@v4.3.0
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #- name: unit-test //TODO: não está funcionando acima do java 21
      #  run: mvn jacoco:prepare-agent verify
      - name: sonarqube-analyze
        uses: SonarSource/sonarcloud-github-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
        #  projectBaseDir: app/src
        #  scannerVersion: 6.2.0.4584
          args: >
            -Dsonar.organization=${{ github.repository_owner }}
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ needs.build.outputs.maven_artifactId }}
            -Dsonar.exclusions=**/*.java
        #    -Dsonar.python.coverage.reportPaths=coverage.xml
        #    -Dsonar.sources=src/
        #    -Dsonar.tests=tests/
        #    -Dsonar.test.exclusions=tests/**
        #    -Dsonar.verbose=true
  image-register:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup-docker-build
        uses: docker/setup-buildx-action@v2.0.0
      - name: docker-login
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build-and-tag
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: nickkborges/ms-sboot:${VERSION}
